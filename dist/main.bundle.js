(()=>{"use strict";var e={426:(e,n,t)=>{t.d(n,{Z:()=>s});var o=t(537),a=t.n(o),i=t(645),r=t.n(i)()(a());r.push([e.id,"body {\n    background-color: black;\n    color: white;\n}\n\n.testing {\n    color: white;\n}\n\n.userInputContainer {\n    margin: 0 auto;\n    justify-content: center;\n    grid-column-end: 3;\n    column-gap: 10px;\n    background-color: rgba(0, 0, 0, 0.5);\n    padding: 10px;\n}\n\n.fieldset {\n    position: relative;\n    border: 1px solid white;\n    padding: 20px;\n    width: 50%;\n    margin: 0 auto;\n    min-width: 575px;\n\n}\n\n.fieldset h1 {\n    position: absolute;\n    top: 0;\n    font-size: 18px;\n    line-height: 1;\n    margin: -9px 0 0; /* half of font-size */\n    background: black;\n    padding: 0 3px;\n}\n\n.flexContainer {\n    display: flex;\n    justify-content: space-evenly;\n    /* border: 1px solid green; */\n    grid-column-start: 1;\n    text-align: center;\n}\n\n.flexContainer p {\n    padding: 10px;\n    border: 1px dotted blue;\n    background-color: rgba(0, 0, 0, 0.5);\n}\n\n.flex2 * {\n    flex: 2;\n}\n\n.flex3 * {\n    flex: 3;\n}\n\n.flex4 * {\n    flex: 4;\n}\n\n.hidden {\n    display: none;\n}\n\n.windDataContainer {\n    display: flex;\n    flex-direction: column;\n    border: 1px solid purple;\n    position: relative;\n    width: 100%;\n    /* padding: 20px; */\n    text-align: center;\n    margin: 16px 0;\n    background-color: rgba(0, 0, 0, 0.5);\n}\n\n.windDataContainer > .dataContainer p {\n    /* padding-top: 20px; */\n    margin: 27px 0 5px 0;\n}\n\n.grid {\n    display: grid;\n    grid-template-columns: minmax(400px, auto) 25%;\n    justify-items: stretch;\n    /* border: 1px solid pink; */\n}\n\n.dataContainer {\n    position: relative;\n}\n\n.littleLabel {\n    background-color: black;\n    position: absolute;\n    font-size: 75%;\n    left: 5%;\n    margin-top: 10px;\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,uBAAuB;IACvB,YAAY;AAChB;;AAEA;IACI,YAAY;AAChB;;AAEA;IACI,cAAc;IACd,uBAAuB;IACvB,kBAAkB;IAClB,gBAAgB;IAChB,oCAAoC;IACpC,aAAa;AACjB;;AAEA;IACI,kBAAkB;IAClB,uBAAuB;IACvB,aAAa;IACb,UAAU;IACV,cAAc;IACd,gBAAgB;;AAEpB;;AAEA;IACI,kBAAkB;IAClB,MAAM;IACN,eAAe;IACf,cAAc;IACd,gBAAgB,EAAE,sBAAsB;IACxC,iBAAiB;IACjB,cAAc;AAClB;;AAEA;IACI,aAAa;IACb,6BAA6B;IAC7B,6BAA6B;IAC7B,oBAAoB;IACpB,kBAAkB;AACtB;;AAEA;IACI,aAAa;IACb,uBAAuB;IACvB,oCAAoC;AACxC;;AAEA;IACI,OAAO;AACX;;AAEA;IACI,OAAO;AACX;;AAEA;IACI,OAAO;AACX;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,wBAAwB;IACxB,kBAAkB;IAClB,WAAW;IACX,mBAAmB;IACnB,kBAAkB;IAClB,cAAc;IACd,oCAAoC;AACxC;;AAEA;IACI,uBAAuB;IACvB,oBAAoB;AACxB;;AAEA;IACI,aAAa;IACb,8CAA8C;IAC9C,sBAAsB;IACtB,4BAA4B;AAChC;;AAEA;IACI,kBAAkB;AACtB;;AAEA;IACI,uBAAuB;IACvB,kBAAkB;IAClB,cAAc;IACd,QAAQ;IACR,gBAAgB;AACpB",sourcesContent:["body {\n    background-color: black;\n    color: white;\n}\n\n.testing {\n    color: white;\n}\n\n.userInputContainer {\n    margin: 0 auto;\n    justify-content: center;\n    grid-column-end: 3;\n    column-gap: 10px;\n    background-color: rgba(0, 0, 0, 0.5);\n    padding: 10px;\n}\n\n.fieldset {\n    position: relative;\n    border: 1px solid white;\n    padding: 20px;\n    width: 50%;\n    margin: 0 auto;\n    min-width: 575px;\n\n}\n\n.fieldset h1 {\n    position: absolute;\n    top: 0;\n    font-size: 18px;\n    line-height: 1;\n    margin: -9px 0 0; /* half of font-size */\n    background: black;\n    padding: 0 3px;\n}\n\n.flexContainer {\n    display: flex;\n    justify-content: space-evenly;\n    /* border: 1px solid green; */\n    grid-column-start: 1;\n    text-align: center;\n}\n\n.flexContainer p {\n    padding: 10px;\n    border: 1px dotted blue;\n    background-color: rgba(0, 0, 0, 0.5);\n}\n\n.flex2 * {\n    flex: 2;\n}\n\n.flex3 * {\n    flex: 3;\n}\n\n.flex4 * {\n    flex: 4;\n}\n\n.hidden {\n    display: none;\n}\n\n.windDataContainer {\n    display: flex;\n    flex-direction: column;\n    border: 1px solid purple;\n    position: relative;\n    width: 100%;\n    /* padding: 20px; */\n    text-align: center;\n    margin: 16px 0;\n    background-color: rgba(0, 0, 0, 0.5);\n}\n\n.windDataContainer > .dataContainer p {\n    /* padding-top: 20px; */\n    margin: 27px 0 5px 0;\n}\n\n.grid {\n    display: grid;\n    grid-template-columns: minmax(400px, auto) 25%;\n    justify-items: stretch;\n    /* border: 1px solid pink; */\n}\n\n.dataContainer {\n    position: relative;\n}\n\n.littleLabel {\n    background-color: black;\n    position: absolute;\n    font-size: 75%;\n    left: 5%;\n    margin-top: 10px;\n}"],sourceRoot:""}]);const s=r},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",o=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),o&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),o&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,o,a,i){"string"==typeof e&&(e=[[null,e,void 0]]);var r={};if(o)for(var s=0;s<this.length;s++){var c=this[s][0];null!=c&&(r[c]=!0)}for(var l=0;l<e.length;l++){var d=[].concat(e[l]);o&&r[d[0]]||(void 0!==i&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=i),t&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=t):d[2]=t),a&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=a):d[4]="".concat(a)),n.push(d))}},n}},537:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),i="/*# ".concat(a," */"),r=t.sources.map((function(e){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(e," */")}));return[n].concat(r).concat([i]).join("\n")}return[n].join("\n")}},379:e=>{var n=[];function t(e){for(var t=-1,o=0;o<n.length;o++)if(n[o].identifier===e){t=o;break}return t}function o(e,o){for(var i={},r=[],s=0;s<e.length;s++){var c=e[s],l=o.base?c[0]+o.base:c[0],d=i[l]||0,A="".concat(l," ").concat(d);i[l]=d+1;var u=t(A),p={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==u)n[u].references++,n[u].updater(p);else{var m=a(p,o);o.byIndex=s,n.splice(s,0,{identifier:A,updater:m,references:1})}r.push(A)}return r}function a(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,a){var i=o(e=e||[],a=a||{});return function(e){e=e||[];for(var r=0;r<i.length;r++){var s=t(i[r]);n[s].references--}for(var c=o(e,a),l=0;l<i.length;l++){var d=t(i[l]);0===n[d].references&&(n[d].updater(),n.splice(d,1))}i=c}}},569:e=>{var n={};e.exports=function(e,t){var o=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var a=void 0!==t.layer;a&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,a&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),n.styleTagTransform(o,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}}},n={};function t(o){var a=n[o];if(void 0!==a)return a.exports;var i=n[o]={id:o,exports:{}};return e[o](i,i.exports,t),i.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var o in n)t.o(n,o)&&!t.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:n[o]})},t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),t.nc=void 0,(()=>{function e(e){console.warn(`ERROR(${e.code}): ${e.message}`)}let n="95b3fba8515b07e36f4947f16bc32b95";function o(e){let n,t=Number(e.slice(0,2)),o=e.slice(3,5),a=e.slice(6,8);return t>13?(t-=12,t=t.toString(),n=t+":"+o+":"+a+"PM",n):t<10?(t=t.toString(),n=t+":"+o+":"+a+"AM",n):t>12&&t<13?(n=e+"PM",n):(n=e+"AM",n)}var a=t(379),i=t.n(a),r=t(795),s=t.n(r),c=t(569),l=t.n(c),d=t(565),A=t.n(d),u=t(216),p=t.n(u),m=t(589),C=t.n(m),f=t(426),g={};let x,h,y,I,B;g.styleTagTransform=C(),g.setAttributes=A(),g.insert=l().bind(null,"head"),g.domAPI=s(),g.insertStyleElement=p(),i()(f.Z,g),f.Z&&f.Z.locals&&f.Z.locals;const v=document.querySelector("#inputPostalCode"),b=document.querySelector("#btnLocalWeather");async function w(){if(y=v.value,v.value="",""!==y){await async function(){let t=await async function(t,o,a){try{t=t||"93301",a=a||"imperial",o=o||"US";let e=await fetch(`https://api.openweathermap.org/geo/1.0/zip?zip=${t},${o}&appid=${n}`,{mode:"cors"});return await e.json()}catch(n){e(n)}}(y);B=function(e){if("string"!=typeof e)return void console.log("Must pass the zipcode as a string.");if(5!==e.length)return void console.log("Must pass a 5-digit zipcode.");const n=parseInt(e,10);let t,o;return n>=35e3&&n<=36999?(t="AL",o="Alabama"):n>=99500&&n<=99999?(t="AK",o="Alaska"):n>=85e3&&n<=86999?(t="AZ",o="Arizona"):n>=71600&&n<=72999?(t="AR",o="Arkansas"):n>=9e4&&n<=96699?(t="CA",o="California"):n>=8e4&&n<=81999?(t="CO",o="Colorado"):n>=6e3&&n<=6389||n>=6391&&n<=6999?(t="CT",o="Connecticut"):n>=19700&&n<=19999?(t="DE",o="Delaware"):n>=32e3&&n<=34999?(t="FL",o="Florida"):n>=3e4&&n<=31999||n>=39800&&n<=39999?(t="GA",o="Georgia"):n>=96700&&n<=96999?(t="HI",o="Hawaii"):n>=83200&&n<=83999?(t="ID",o="Idaho"):n>=6e4&&n<=62999?(t="IL",o="Illinois"):n>=46e3&&n<=47999?(t="IN",o="Indiana"):n>=5e4&&n<=52999?(t="IA",o="Iowa"):n>=66e3&&n<=67999?(t="KS",o="Kansas"):n>=4e4&&n<=42999?(t="KY",o="Kentucky"):n>=7e4&&n<=71599?(t="LA",o="Louisiana"):n>=3900&&n<=4999?(t="ME",o="Maine"):n>=20600&&n<=21999?(t="MD",o="Maryland"):n>=1e3&&n<=2799||5501==n||5544==n?(t="MA",o="Massachusetts"):n>=48e3&&n<=49999?(t="MI",o="Michigan"):n>=55e3&&n<=56899?(t="MN",o="Minnesota"):n>=38600&&n<=39999?(t="MS",o="Mississippi"):n>=63e3&&n<=65999?(t="MO",o="Missouri"):n>=59e3&&n<=59999?(t="MT",o="Montana"):n>=27e3&&n<=28999?(t="NC",o="North Carolina"):n>=58e3&&n<=58999?(t="ND",o="North Dakota"):n>=68e3&&n<=69999?(t="NE",o="Nebraska"):n>=88900&&n<=89999?(t="NV",o="Nevada"):n>=3e3&&n<=3899?(t="NH",o="New Hampshire"):n>=7e3&&n<=8999?(t="NJ",o="New Jersey"):n>=87e3&&n<=88499?(t="NM",o="New Mexico"):n>=1e4&&n<=14999||6390==n||501==n||544==n?(t="NY",o="New York"):n>=43e3&&n<=45999?(t="OH",o="Ohio"):n>=73e3&&n<=73199||n>=73400&&n<=74999?(t="OK",o="Oklahoma"):n>=97e3&&n<=97999?(t="OR",o="Oregon"):n>=15e3&&n<=19699?(t="PA",o="Pennsylvania"):n>=300&&n<=999?(t="PR",o="Puerto Rico"):n>=2800&&n<=2999?(t="RI",o="Rhode Island"):n>=29e3&&n<=29999?(t="SC",o="South Carolina"):n>=57e3&&n<=57999?(t="SD",o="South Dakota"):n>=37e3&&n<=38599?(t="TN",o="Tennessee"):n>=75e3&&n<=79999||n>=73301&&n<=73399||n>=88500&&n<=88599?(t="TX",o="Texas"):n>=84e3&&n<=84999?(t="UT",o="Utah"):n>=5e3&&n<=5999?(t="VT",o="Vermont"):n>=20100&&n<=20199||n>=22e3&&n<=24699||20598==n?(t="VA",o="Virginia"):n>=2e4&&n<=20099||n>=20200&&n<=20599||n>=56900&&n<=56999?(t="DC",o="Washington DC"):n>=98e3&&n<=99499?(t="WA",o="Washington"):n>=24700&&n<=26999?(t="WV",o="West Virginia"):n>=53e3&&n<=54999?(t="WI",o="Wisconsin"):n>=82e3&&n<=83199?(t="WY",o="Wyoming"):(t="none",o="none",console.log("No state found matching",n)),t}(y),I=t.name,x=t.lat,h=t.lon}();let s=await async function(t,o,a){try{a=a||"imperial";let e=await fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${t}&lon=${o}&units=${a}&appid=${n}`,{mode:"cors"}),i=await e.json();return console.log(i),i}catch(n){e(n)}}(x,h);console.log(s);let c=await async function(n){try{n+=" weather",console.log(n);let e=await fetch("https://api.giphy.com/v1/gifs/translate?api_key=0JvtDfunbRZAukBB5R94oBnUtDprGS0i&s="+n,{mode:"cors"}),t=await e.json();return console.log(e),console.log(t.data.images.original.url),t.data.images.original.url}catch(n){e(n)}}(s.weather[0].description),l={data:(t=s,o(new Date(1e3*t.dt).toTimeString().slice(0,8)),{tempCurrent:Math.round(t.main.temp)+"F°",tempFeels:Math.round(t.main.feels_like)+"F°",tempHigh:Math.round(t.main.temp_max)+"F°",tempLow:Math.round(t.main.temp_min)+"F°",humidity:t.main.humidity+"%",pressure:(r=t.main.pressure,.029529983071445*r).toFixed(2),cloudsPercent:t.clouds.all+"%",description:t.weather[0].description,windSpeed:(i=t.wind.speed,2.23694*i).toFixed(2)+"mph",windDirection:(a=t.wind.deg,a>348.75||a<11.25?"N":a>11.25||a<33.75?"NNE":a>33.75||a<56.25?"NE":a>56.25||a<78.75?"ENE":a>78.75||a<101.25?"E":a>101.25||a<123.75?"ESE":a>123.75||a<146.25?"SE":a>146.25||a<168.75?"SSE":a>168.75||a<191.25?"S":a>191.25||a<213.75?"SSW":a>213.75||a<236.25?"SW":a>236.25||a<258.75?"WSW":eg>258.75||a<281.25?"W":a>281.25||a<303.75?"WNW":eg>303.75||a<326.25?"NW":a>326.25||a<348.75?"NNW":void 0),dateTime:o(new Date(1e3*t.dt).toTimeString().slice(0,8)),sunRise:o(new Date(1e3*t.sys.sunrise).toTimeString().slice(0,8)),sunSet:o(new Date(1e3*t.sys.sunset).toTimeString().slice(0,8)),visibility:.001*t.visibility+"km",rain1h:void 0!==t.rain?t.rain["1h"]+"mm":"0mm",rain3h:void 0!==t.rain?t.rain["3h"]+"mm":"0mm",snow1h:void 0!==t.snow?t.snow["1h"]+"mm":"0mm",snow3h:void 0!==t.snow?t.snow["3h"]+"mm":"0mm",location:t.name}),cityName:I,stateName:B,weatherGif:c};console.log(l),function(e){console.log(e);let n=e.data.tempCurrent,t=e.data.description,o=e.data.tempHigh,a=e.data.tempLow,i=e.data.tempFeels,r=e.data.cloudsPercent,s=e.data.pressure,c=e.data.humidity,l=e.data.visibility,d=e.data.sunRise,A=e.data.sunSet,u=(e.data.location,e.data.dateTime),p=e.data.windSpeed,m=e.data.windDirection;if("0mm"!==e.data.rain1h){let n=e.data.rain1h;if(document.querySelector("#rain1HText").textContent=n,"0mm"!==e.data.rain3h){let n=e.data.rain3h;document.querySelector("#rain3HText").textContent=n}}if("0mm"!==e.data.snow1h){let n=e.data.snow1h;if(document.querySelector("#snow1HText").textContent=n,"0mm"!==e.data.snow3h){let n=e.data.snow3h;document.querySelector("#snow3HText").textContent=n}}const C=document.querySelector(".fieldset");C.style.background=`black url(${e.weatherGif}) no-repeat center`,C.style.backgroundSize="cover";const f=document.querySelector("#tempCurrentText");console.log(f),f.textContent=n,document.querySelector("#weatherDescriptionText").textContent=t,document.querySelector("#tempHighText").textContent=o,document.querySelector("#tempLowText").textContent=a,document.querySelector("#tempFeelsText").textContent=i,document.querySelector("#windSpeedText").textContent=p,document.querySelector("#windDirectionText").textContent=m,document.querySelector("#cloudsPercentText").textContent=r,document.querySelector("#pressureText").textContent=s,document.querySelector("#humidityText").textContent=c,document.querySelector("#visibilityText").textContent=l,document.querySelector("#sunriseText").textContent=d,document.querySelector("#sunsetText").textContent=A,document.querySelector("#locationText").textContent=`${e.cityName}, ${e.stateName}`,document.querySelector("#timeText").textContent=u}(l)}else e({code:425,message:"You have not entered a Postal Code."});var t,a,i,r}v.value="93301",w(),b.addEventListener("click",w),v.addEventListener("keyup",(e=>{"Enter"===e.key&&w()}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,