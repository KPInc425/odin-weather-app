(()=>{"use strict";var n={933:(n,A,r)=>{r.d(A,{Z:()=>i});var e=r(537),t=r.n(e),a=r(645),o=r.n(a)()(t());o.push([n.id,"/*\r\nhtml5doctor.com Reset Stylesheet\r\nv1.6.1\r\nLast Updated: 2010-09-17\r\nAuthor: Richard Clark - http://richclarkdesign.com\r\nTwitter: @rich_clark\r\n*/\r\n\r\nhtml, body, div, span, object, iframe,\r\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\r\nabbr, address, cite, code,\r\ndel, dfn, em, img, ins, kbd, q, samp,\r\nsmall, strong, sub, sup, var,\r\nb, i,\r\ndl, dt, dd, ol, ul, li,\r\nfieldset, form, label, legend,\r\ntable, caption, tbody, tfoot, thead, tr, th, td,\r\narticle, aside, canvas, details, figcaption, figure,\r\nfooter, header, hgroup, menu, nav, section, summary,\r\ntime, mark, audio, video {\r\n    margin:0;\r\n    padding:0;\r\n    border:0;\r\n    outline:0;\r\n    font-size:100%;\r\n    vertical-align:baseline;\r\n    background:transparent;\r\n}\r\n\r\nbody {\r\n    line-height:1;\r\n}\r\n\r\narticle,aside,details,figcaption,figure,\r\nfooter,header,hgroup,menu,nav,section {\r\n    display:block;\r\n}\r\n\r\nnav ul {\r\n    list-style:none;\r\n}\r\n\r\nblockquote, q {\r\n    quotes:none;\r\n}\r\n\r\nblockquote:before, blockquote:after,\r\nq:before, q:after {\r\n    content:'';\r\n    content:none;\r\n}\r\n\r\na {\r\n    margin:0;\r\n    padding:0;\r\n    font-size:100%;\r\n    vertical-align:baseline;\r\n    background:transparent;\r\n}\r\n\r\n/* change colours to suit your needs */\r\nins {\r\n    background-color:#ff9;\r\n    color:#000;\r\n    -webkit-text-decoration:none;\r\n    text-decoration:none;\r\n}\r\n\r\n/* change colours to suit your needs */\r\nmark {\r\n    background-color:#ff9;\r\n    color:#000;\r\n    font-style:italic;\r\n    font-weight:bold;\r\n}\r\n\r\ndel {\r\n    -webkit-text-decoration: line-through;\r\n    text-decoration: line-through;\r\n}\r\n\r\nabbr[title], dfn[title] {\r\n    border-bottom:1px dotted;\r\n    cursor:help;\r\n}\r\n\r\ntable {\r\n    border-collapse:collapse;\r\n    border-spacing:0;\r\n}\r\n\r\n/* change border colour to suit your needs */\r\nhr {\r\n    display:block;\r\n    height:1px;\r\n    border:0;  \r\n    border-top:1px solid #cccccc;\r\n    margin:1em 0;\r\n    padding:0;\r\n}\r\n\r\ninput, select {\r\n    vertical-align:middle;\r\n}","",{version:3,sources:["webpack://./src/reset.css"],names:[],mappings:"AAAA;;;;;;CAMC;;AAED;;;;;;;;;;;;IAYI,QAAQ;IACR,SAAS;IACT,QAAQ;IACR,SAAS;IACT,cAAc;IACd,uBAAuB;IACvB,sBAAsB;AAC1B;;AAEA;IACI,aAAa;AACjB;;AAEA;;IAEI,aAAa;AACjB;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,WAAW;AACf;;AAEA;;IAEI,UAAU;IACV,YAAY;AAChB;;AAEA;IACI,QAAQ;IACR,SAAS;IACT,cAAc;IACd,uBAAuB;IACvB,sBAAsB;AAC1B;;AAEA,sCAAsC;AACtC;IACI,qBAAqB;IACrB,UAAU;IACV,4BAAoB;IAApB,oBAAoB;AACxB;;AAEA,sCAAsC;AACtC;IACI,qBAAqB;IACrB,UAAU;IACV,iBAAiB;IACjB,gBAAgB;AACpB;;AAEA;IACI,qCAA6B;IAA7B,6BAA6B;AACjC;;AAEA;IACI,wBAAwB;IACxB,WAAW;AACf;;AAEA;IACI,wBAAwB;IACxB,gBAAgB;AACpB;;AAEA,4CAA4C;AAC5C;IACI,aAAa;IACb,UAAU;IACV,QAAQ;IACR,4BAA4B;IAC5B,YAAY;IACZ,SAAS;AACb;;AAEA;IACI,qBAAqB;AACzB",sourcesContent:["/*\r\nhtml5doctor.com Reset Stylesheet\r\nv1.6.1\r\nLast Updated: 2010-09-17\r\nAuthor: Richard Clark - http://richclarkdesign.com\r\nTwitter: @rich_clark\r\n*/\r\n\r\nhtml, body, div, span, object, iframe,\r\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\r\nabbr, address, cite, code,\r\ndel, dfn, em, img, ins, kbd, q, samp,\r\nsmall, strong, sub, sup, var,\r\nb, i,\r\ndl, dt, dd, ol, ul, li,\r\nfieldset, form, label, legend,\r\ntable, caption, tbody, tfoot, thead, tr, th, td,\r\narticle, aside, canvas, details, figcaption, figure,\r\nfooter, header, hgroup, menu, nav, section, summary,\r\ntime, mark, audio, video {\r\n    margin:0;\r\n    padding:0;\r\n    border:0;\r\n    outline:0;\r\n    font-size:100%;\r\n    vertical-align:baseline;\r\n    background:transparent;\r\n}\r\n\r\nbody {\r\n    line-height:1;\r\n}\r\n\r\narticle,aside,details,figcaption,figure,\r\nfooter,header,hgroup,menu,nav,section {\r\n    display:block;\r\n}\r\n\r\nnav ul {\r\n    list-style:none;\r\n}\r\n\r\nblockquote, q {\r\n    quotes:none;\r\n}\r\n\r\nblockquote:before, blockquote:after,\r\nq:before, q:after {\r\n    content:'';\r\n    content:none;\r\n}\r\n\r\na {\r\n    margin:0;\r\n    padding:0;\r\n    font-size:100%;\r\n    vertical-align:baseline;\r\n    background:transparent;\r\n}\r\n\r\n/* change colours to suit your needs */\r\nins {\r\n    background-color:#ff9;\r\n    color:#000;\r\n    text-decoration:none;\r\n}\r\n\r\n/* change colours to suit your needs */\r\nmark {\r\n    background-color:#ff9;\r\n    color:#000;\r\n    font-style:italic;\r\n    font-weight:bold;\r\n}\r\n\r\ndel {\r\n    text-decoration: line-through;\r\n}\r\n\r\nabbr[title], dfn[title] {\r\n    border-bottom:1px dotted;\r\n    cursor:help;\r\n}\r\n\r\ntable {\r\n    border-collapse:collapse;\r\n    border-spacing:0;\r\n}\r\n\r\n/* change border colour to suit your needs */\r\nhr {\r\n    display:block;\r\n    height:1px;\r\n    border:0;  \r\n    border-top:1px solid #cccccc;\r\n    margin:1em 0;\r\n    padding:0;\r\n}\r\n\r\ninput, select {\r\n    vertical-align:middle;\r\n}"],sourceRoot:""}]);const i=o},576:(n,A,r)=>{r.d(A,{Z:()=>i});var e=r(537),t=r.n(e),a=r(645),o=r.n(a)()(t());o.push([n.id,'/*\n! tailwindcss v3.3.2 | MIT License | https://tailwindcss.com\n*//*\n1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)\n2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)\n*/\n\n*,\n::before,\n::after {\n  box-sizing: border-box; /* 1 */\n  border-width: 0; /* 2 */\n  border-style: solid; /* 2 */\n  border-color: #e5e7eb; /* 2 */\n}\n\n::before,\n::after {\n  --tw-content: \'\';\n}\n\n/*\n1. Use a consistent sensible line-height in all browsers.\n2. Prevent adjustments of font size after orientation changes in iOS.\n3. Use a more readable tab size.\n4. Use the user\'s configured `sans` font-family by default.\n5. Use the user\'s configured `sans` font-feature-settings by default.\n6. Use the user\'s configured `sans` font-variation-settings by default.\n*/\n\nhtml {\n  line-height: 1.5; /* 1 */\n  -webkit-text-size-adjust: 100%; /* 2 */\n  -moz-tab-size: 4; /* 3 */\n  -o-tab-size: 4;\n     tab-size: 4; /* 3 */\n  font-family: ui-sans-serif, system-ui, -apple-system, Segoe UI, Roboto, Ubuntu, Cantarell, Noto Sans, sans-serif, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji"; /* 4 */\n  font-feature-settings: normal; /* 5 */\n  font-variation-settings: normal; /* 6 */\n}\n\n/*\n1. Remove the margin in all browsers.\n2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.\n*/\n\nbody {\n  margin: 0; /* 1 */\n  line-height: inherit; /* 2 */\n}\n\n/*\n1. Add the correct height in Firefox.\n2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)\n3. Ensure horizontal rules are visible by default.\n*/\n\nhr {\n  height: 0; /* 1 */\n  color: inherit; /* 2 */\n  border-top-width: 1px; /* 3 */\n}\n\n/*\nAdd the correct text decoration in Chrome, Edge, and Safari.\n*/\n\nabbr:where([title]) {\n  text-decoration: underline;\n  -webkit-text-decoration: underline dotted;\n          text-decoration: underline dotted;\n}\n\n/*\nRemove the default font size and weight for headings.\n*/\n\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  font-size: inherit;\n  font-weight: inherit;\n}\n\n/*\nReset links to optimize for opt-in styling instead of opt-out.\n*/\n\na {\n  color: inherit;\n  text-decoration: inherit;\n}\n\n/*\nAdd the correct font weight in Edge and Safari.\n*/\n\nb,\nstrong {\n  font-weight: bolder;\n}\n\n/*\n1. Use the user\'s configured `mono` font family by default.\n2. Correct the odd `em` font sizing in all browsers.\n*/\n\ncode,\nkbd,\nsamp,\npre {\n  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace; /* 1 */\n  font-size: 1em; /* 2 */\n}\n\n/*\nAdd the correct font size in all browsers.\n*/\n\nsmall {\n  font-size: 80%;\n}\n\n/*\nPrevent `sub` and `sup` elements from affecting the line height in all browsers.\n*/\n\nsub,\nsup {\n  font-size: 75%;\n  line-height: 0;\n  position: relative;\n  vertical-align: baseline;\n}\n\nsub {\n  bottom: -0.25em;\n}\n\nsup {\n  top: -0.5em;\n}\n\n/*\n1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)\n2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)\n3. Remove gaps between table borders by default.\n*/\n\ntable {\n  text-indent: 0; /* 1 */\n  border-color: inherit; /* 2 */\n  border-collapse: collapse; /* 3 */\n}\n\n/*\n1. Change the font styles in all browsers.\n2. Remove the margin in Firefox and Safari.\n3. Remove default padding in all browsers.\n*/\n\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  font-family: inherit; /* 1 */\n  font-size: 100%; /* 1 */\n  font-weight: inherit; /* 1 */\n  line-height: inherit; /* 1 */\n  color: inherit; /* 1 */\n  margin: 0; /* 2 */\n  padding: 0; /* 3 */\n}\n\n/*\nRemove the inheritance of text transform in Edge and Firefox.\n*/\n\nbutton,\nselect {\n  text-transform: none;\n}\n\n/*\n1. Correct the inability to style clickable types in iOS and Safari.\n2. Remove default button styles.\n*/\n\nbutton,\n[type=\'button\'],\n[type=\'reset\'],\n[type=\'submit\'] {\n  -webkit-appearance: button; /* 1 */\n  background-color: transparent; /* 2 */\n  background-image: none; /* 2 */\n}\n\n/*\nUse the modern Firefox focus style for all focusable elements.\n*/\n\n:-moz-focusring {\n  outline: auto;\n}\n\n/*\nRemove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)\n*/\n\n:-moz-ui-invalid {\n  box-shadow: none;\n}\n\n/*\nAdd the correct vertical alignment in Chrome and Firefox.\n*/\n\nprogress {\n  vertical-align: baseline;\n}\n\n/*\nCorrect the cursor style of increment and decrement buttons in Safari.\n*/\n\n::-webkit-inner-spin-button,\n::-webkit-outer-spin-button {\n  height: auto;\n}\n\n/*\n1. Correct the odd appearance in Chrome and Safari.\n2. Correct the outline style in Safari.\n*/\n\n[type=\'search\'] {\n  -webkit-appearance: textfield; /* 1 */\n  outline-offset: -2px; /* 2 */\n}\n\n/*\nRemove the inner padding in Chrome and Safari on macOS.\n*/\n\n::-webkit-search-decoration {\n  -webkit-appearance: none;\n}\n\n/*\n1. Correct the inability to style clickable types in iOS and Safari.\n2. Change font properties to `inherit` in Safari.\n*/\n\n::-webkit-file-upload-button {\n  -webkit-appearance: button; /* 1 */\n  font: inherit; /* 2 */\n}\n\n/*\nAdd the correct display in Chrome and Safari.\n*/\n\nsummary {\n  display: list-item;\n}\n\n/*\nRemoves the default spacing and border for appropriate elements.\n*/\n\nblockquote,\ndl,\ndd,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\nhr,\nfigure,\np,\npre {\n  margin: 0;\n}\n\nfieldset {\n  margin: 0;\n  padding: 0;\n}\n\nlegend {\n  padding: 0;\n}\n\nol,\nul,\nmenu {\n  list-style: none;\n  margin: 0;\n  padding: 0;\n}\n\n/*\nPrevent resizing textareas horizontally by default.\n*/\n\ntextarea {\n  resize: vertical;\n}\n\n/*\n1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)\n2. Set the default placeholder color to the user\'s configured gray 400 color.\n*/\n\ninput::-moz-placeholder, textarea::-moz-placeholder {\n  opacity: 1; /* 1 */\n  color: #9ca3af; /* 2 */\n}\n\ninput::placeholder,\ntextarea::placeholder {\n  opacity: 1; /* 1 */\n  color: #9ca3af; /* 2 */\n}\n\n/*\nSet the default cursor for buttons.\n*/\n\nbutton,\n[role="button"] {\n  cursor: pointer;\n}\n\n/*\nMake sure disabled buttons don\'t get the pointer cursor.\n*/\n:disabled {\n  cursor: default;\n}\n\n/*\n1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)\n2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)\n   This can trigger a poorly considered lint error in some tools but is included by design.\n*/\n\nimg,\nsvg,\nvideo,\ncanvas,\naudio,\niframe,\nembed,\nobject {\n  display: block; /* 1 */\n  vertical-align: middle; /* 2 */\n}\n\n/*\nConstrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)\n*/\n\nimg,\nvideo {\n  max-width: 100%;\n  height: auto;\n}\n\n/* Make elements with the HTML hidden attribute stay hidden by default */\n[hidden] {\n  display: none;\n}\n\n*, ::before, ::after {\n  --tw-border-spacing-x: 0;\n  --tw-border-spacing-y: 0;\n  --tw-translate-x: 0;\n  --tw-translate-y: 0;\n  --tw-rotate: 0;\n  --tw-skew-x: 0;\n  --tw-skew-y: 0;\n  --tw-scale-x: 1;\n  --tw-scale-y: 1;\n  --tw-pan-x:  ;\n  --tw-pan-y:  ;\n  --tw-pinch-zoom:  ;\n  --tw-scroll-snap-strictness: proximity;\n  --tw-gradient-from-position:  ;\n  --tw-gradient-via-position:  ;\n  --tw-gradient-to-position:  ;\n  --tw-ordinal:  ;\n  --tw-slashed-zero:  ;\n  --tw-numeric-figure:  ;\n  --tw-numeric-spacing:  ;\n  --tw-numeric-fraction:  ;\n  --tw-ring-inset:  ;\n  --tw-ring-offset-width: 0px;\n  --tw-ring-offset-color: #fff;\n  --tw-ring-color: rgba(59, 130, 246, 0.5);\n  --tw-ring-offset-shadow: 0 0 rgba(0,0,0,0);\n  --tw-ring-shadow: 0 0 rgba(0,0,0,0);\n  --tw-shadow: 0 0 rgba(0,0,0,0);\n  --tw-shadow-colored: 0 0 rgba(0,0,0,0);\n  --tw-blur:  ;\n  --tw-brightness:  ;\n  --tw-contrast:  ;\n  --tw-grayscale:  ;\n  --tw-hue-rotate:  ;\n  --tw-invert:  ;\n  --tw-saturate:  ;\n  --tw-sepia:  ;\n  --tw-drop-shadow:  ;\n  --tw-backdrop-blur:  ;\n  --tw-backdrop-brightness:  ;\n  --tw-backdrop-contrast:  ;\n  --tw-backdrop-grayscale:  ;\n  --tw-backdrop-hue-rotate:  ;\n  --tw-backdrop-invert:  ;\n  --tw-backdrop-opacity:  ;\n  --tw-backdrop-saturate:  ;\n  --tw-backdrop-sepia:  ;\n}\n\n::backdrop {\n  --tw-border-spacing-x: 0;\n  --tw-border-spacing-y: 0;\n  --tw-translate-x: 0;\n  --tw-translate-y: 0;\n  --tw-rotate: 0;\n  --tw-skew-x: 0;\n  --tw-skew-y: 0;\n  --tw-scale-x: 1;\n  --tw-scale-y: 1;\n  --tw-pan-x:  ;\n  --tw-pan-y:  ;\n  --tw-pinch-zoom:  ;\n  --tw-scroll-snap-strictness: proximity;\n  --tw-gradient-from-position:  ;\n  --tw-gradient-via-position:  ;\n  --tw-gradient-to-position:  ;\n  --tw-ordinal:  ;\n  --tw-slashed-zero:  ;\n  --tw-numeric-figure:  ;\n  --tw-numeric-spacing:  ;\n  --tw-numeric-fraction:  ;\n  --tw-ring-inset:  ;\n  --tw-ring-offset-width: 0px;\n  --tw-ring-offset-color: #fff;\n  --tw-ring-color: rgba(59, 130, 246, 0.5);\n  --tw-ring-offset-shadow: 0 0 rgba(0,0,0,0);\n  --tw-ring-shadow: 0 0 rgba(0,0,0,0);\n  --tw-shadow: 0 0 rgba(0,0,0,0);\n  --tw-shadow-colored: 0 0 rgba(0,0,0,0);\n  --tw-blur:  ;\n  --tw-brightness:  ;\n  --tw-contrast:  ;\n  --tw-grayscale:  ;\n  --tw-hue-rotate:  ;\n  --tw-invert:  ;\n  --tw-saturate:  ;\n  --tw-sepia:  ;\n  --tw-drop-shadow:  ;\n  --tw-backdrop-blur:  ;\n  --tw-backdrop-brightness:  ;\n  --tw-backdrop-contrast:  ;\n  --tw-backdrop-grayscale:  ;\n  --tw-backdrop-hue-rotate:  ;\n  --tw-backdrop-invert:  ;\n  --tw-backdrop-opacity:  ;\n  --tw-backdrop-saturate:  ;\n  --tw-backdrop-sepia:  ;\n}\r\n.container {\n  width: 100%;\n}\r\n@media (min-width: 640px) {\n\n  .container {\n    max-width: 640px;\n  }\n}\r\n@media (min-width: 768px) {\n\n  .container {\n    max-width: 768px;\n  }\n}\r\n@media (min-width: 1024px) {\n\n  .container {\n    max-width: 1024px;\n  }\n}\r\n@media (min-width: 1280px) {\n\n  .container {\n    max-width: 1280px;\n  }\n}\r\n@media (min-width: 1536px) {\n\n  .container {\n    max-width: 1536px;\n  }\n}\r\n.visible {\n  visibility: visible;\n}\r\n.collapse {\n  visibility: collapse;\n}\r\n.absolute {\n  position: absolute;\n}\r\n.relative {\n  position: relative;\n}\r\n.bottom-0 {\n  bottom: 0px;\n}\r\n.left-0 {\n  left: 0px;\n}\r\n.right-0 {\n  right: 0px;\n}\r\n.top-0 {\n  top: 0px;\n}\r\n.mx-auto {\n  margin-left: auto;\n  margin-right: auto;\n}\r\n.-mt-16 {\n  margin-top: -4rem;\n}\r\n.-mt-8 {\n  margin-top: -2rem;\n}\r\n.mt-5 {\n  margin-top: 1.25rem;\n}\r\n.mt-96 {\n  margin-top: 24rem;\n}\r\n.mt-auto {\n  margin-top: auto;\n}\r\n.block {\n  display: block;\n}\r\n.flex {\n  display: flex;\n}\r\n.table {\n  display: table;\n}\r\n.grid {\n  display: grid;\n}\r\n.contents {\n  display: contents;\n}\r\n.hidden {\n  display: none;\n}\r\n.h-screen {\n  height: 100vh;\n}\r\n.w-1 {\n  width: 0.25rem;\n}\r\n.w-1\\/2 {\n  width: 50%;\n}\r\n.w-3 {\n  width: 0.75rem;\n}\r\n.w-32 {\n  width: 8rem;\n}\r\n.w-64 {\n  width: 16rem;\n}\r\n.w-screen {\n  width: 100vw;\n}\r\n.border-collapse {\n  border-collapse: collapse;\n}\r\n.-translate-x-1 {\n  --tw-translate-x: -0.25rem;\n  transform: translate(-0.25rem, var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));\n  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));\n}\r\n.-translate-y-1 {\n  --tw-translate-y: -0.25rem;\n  transform: translate(var(--tw-translate-x), -0.25rem) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));\n  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));\n}\r\n.transform {\n  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));\n}\r\n.resize {\n  resize: both;\n}\r\n.place-items-center {\n  align-items: center;\n  justify-items: center;\n  place-items: center;\n}\r\n.items-center {\n  align-items: center;\n}\r\n.rounded {\n  border-radius: 0.25rem;\n}\r\n.rounded-lg {\n  border-radius: 0.5rem;\n}\r\n.border {\n  border-width: 1px;\n}\r\n.border-red-400 {\n  --tw-border-opacity: 1;\n  border-color: rgba(248, 113, 113, 1);\n  border-color: rgb(248 113 113 / var(--tw-border-opacity));\n}\r\n.bg-gray-800 {\n  --tw-bg-opacity: 1;\n  background-color: rgba(31, 41, 55, 1);\n  background-color: rgb(31 41 55 / var(--tw-bg-opacity));\n}\r\n.bg-green-500 {\n  --tw-bg-opacity: 1;\n  background-color: rgba(34, 197, 94, 1);\n  background-color: rgb(34 197 94 / var(--tw-bg-opacity));\n}\r\n.bg-red-100 {\n  --tw-bg-opacity: 1;\n  background-color: rgba(254, 226, 226, 1);\n  background-color: rgb(254 226 226 / var(--tw-bg-opacity));\n}\r\n.bg-opacity-50 {\n  --tw-bg-opacity: 0.5;\n}\r\n.p-10 {\n  padding: 2.5rem;\n}\r\n.p-2 {\n  padding: 0.5rem;\n}\r\n.p-5 {\n  padding: 1.25rem;\n}\r\n.px-4 {\n  padding-left: 1rem;\n  padding-right: 1rem;\n}\r\n.py-3 {\n  padding-top: 0.75rem;\n  padding-bottom: 0.75rem;\n}\r\n.pl-2 {\n  padding-left: 0.5rem;\n}\r\n.text-center {\n  text-align: center;\n}\r\n.text-2xl {\n  font-size: 1.5rem;\n  line-height: 2rem;\n}\r\n.text-xl {\n  font-size: 1.25rem;\n  line-height: 1.75rem;\n}\r\n.font-extrabold {\n  font-weight: 800;\n}\r\n.text-black {\n  --tw-text-opacity: 1;\n  color: rgba(0, 0, 0, 1);\n  color: rgb(0 0 0 / var(--tw-text-opacity));\n}\r\n.text-red-700 {\n  --tw-text-opacity: 1;\n  color: rgba(185, 28, 28, 1);\n  color: rgb(185 28 28 / var(--tw-text-opacity));\n}\r\n.underline {\n  text-decoration-line: underline;\n}\r\n.opacity-100 {\n  opacity: 1;\n}\r\n.opacity-5 {\n  opacity: 0.05;\n}\r\n.opacity-50 {\n  opacity: 0.5;\n}\r\n.outline {\n  outline-style: solid;\n}\r\n.backdrop-brightness-100 {\n  --tw-backdrop-brightness: brightness(1);\n  -webkit-backdrop-filter: var(--tw-backdrop-blur) brightness(1) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);\n          backdrop-filter: var(--tw-backdrop-blur) brightness(1) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);\n  -webkit-backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);\n          backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);\n}\r\n.backdrop-opacity-50 {\n  --tw-backdrop-opacity: opacity(0.5);\n  -webkit-backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) opacity(0.5) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);\n          backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) opacity(0.5) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);\n  -webkit-backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);\n          backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);\n}\r\n.backdrop-filter {\n  -webkit-backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);\n          backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);\n}\r\n\r\nbody {\r\n    background-color: black;\r\n    color: white;\r\n}\r\n\r\n.testing {\r\n    color: white;\r\n}\r\n\r\n.userInputContainer {\r\n    margin: 0 auto;\r\n    justify-content: center;\r\n    grid-column-end: 3;\r\n    -moz-column-gap: 10px;\r\n         column-gap: 10px;\r\n    background-color: rgba(0, 0, 0, 0.5);\r\n    padding: 10px;\r\n}\r\n\r\n\r\n.flexContainer {\r\n    display: flex;\r\n    justify-content: space-evenly;\r\n    /* border: 1px solid green; */\r\n    grid-column-start: 1;\r\n    text-align: center;\r\n    margin-top: 10px;\r\n}\r\n\r\n.dataContainer p {\r\n    padding: 10px;\r\n    /* border: 1px dotted blue; */\r\n    border-radius: 12px;\r\n    background-color: rgba(0, 0, 0, 0.5);\r\n    /* margin-top: 10px; */\r\n}\r\n\r\n.flex2 * {\r\n    flex: 2;\r\n}\r\n\r\n.flex3 * {\r\n    flex: 3;\r\n}\r\n\r\n.flex4 * {\r\n    flex: 4;\r\n}\r\n\r\n.hidden {\r\n    display: none;\r\n}\r\n\r\n.windDataContainer {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-around;\r\n    /* border: 1px solid purple; */\r\n    position: relative;\r\n    width: 100%;\r\n    text-align: center;\r\n    margin: 16px 0;\r\n    background-color: rgba(0, 0, 0, 0.5);\r\n    grid-column-start: 2;\r\n    grid-row-start: 1;\r\n    grid-row-end: 3;\r\n}\r\n\r\n.gridWeather {\r\n    display: grid;\r\n    grid-template-columns: minmax(400px, auto) 25%;\r\n    justify-items: stretch;\r\n    grid-column-gap: 10px;\r\n    -moz-column-gap: 10px;\r\n         column-gap: 10px;\r\n    /* border: 1px solid pink; */\r\n}\r\n\r\n.dataContainer {\r\n    position: relative;\r\n    padding: 1rem;\r\n}\r\n\r\n.littleLabel {\r\n    background-color: rgba(0, 0, 0);\r\n    border-radius: 5px 5px 0 0;\r\n    position: absolute;\r\n    font-size: 75%;\r\n    left: 5%;\r\n    margin-top: -5px;\r\n    padding: 0 5px;\r\n}\r\n\r\n.loadingWidget{\r\n    position: absolute;\r\n    bottom: 2%;\r\n    right: 5%;\r\n    transform: translate(-50%, -50%);\r\n    z-index: 10;\r\n    width: 32px;\r\n    /* height: 64px; */\r\n    border-radius: 50%;\r\n    background-color: rgba(0, 0, 0, 0.5);\r\n}\r\n\r\n.weatherIcon {\r\n    display: inline-block;\r\n    width: 128px;\r\n    height: 128px;\r\n}\r\n\r\n.weatherIconContainer {\r\n    /* position: absolute; */\r\n    grid-column-start: 2;\r\n    grid-row-start: 3;\r\n    grid-row-end: 5;\r\n    /* border: 1px solid red; */\r\n    background-color: rgba(0, 0, 0, 0.5);\r\n    width: 128px;\r\n    height: 128px;\r\n    margin: 0 auto;\r\n}\r\n\r\n.gridForecast {\r\n    display: grid;\r\n    grid-template-columns: 70% minmax(25px, 30%);\r\n    justify-items: stretch;\r\n    /* column-gap: 10px; */\r\n    border: 1px solid pink;\r\n}\r\n\r\n.forecastWeatherIcon {\r\n    display: inline-block;\r\n    width: 64px;\r\n    height: 64px;\r\n    background-color: white;\r\n    grid-column-end: 2;\r\n\r\n}\r\n\r\n.iconContainer {\r\n    width: 64px;\r\n    height: 64px;\r\n    border: 1px solid red;\r\n    grid-row-start: 2;\r\n    grid-row-end: 4;\r\n    /* margin-right: 5px; */\r\n}\r\n\r\n/* .tempsContainer {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-around;\r\n    padding: 0 10px;\r\n} */\r\n\r\n.forecastDayContainer .forecastTemp {\r\n    grid-column-start: 2;\r\n    padding-left: 5px;\r\n    align-self: center;\r\n}\r\n\r\n.forecastDayContainer .dayLabel {\r\n    grid-column-start: 1;\r\n    grid-column-end: 3;\r\n    padding: 5px;\r\n}\r\n\r\n.hover\\:bg-white:hover {\n  --tw-bg-opacity: 1;\n  background-color: rgba(255, 255, 255, 1);\n  background-color: rgb(255 255 255 / var(--tw-bg-opacity));\n}\r\n\r\n.hover\\:text-black:hover {\n  --tw-text-opacity: 1;\n  color: rgba(0, 0, 0, 1);\n  color: rgb(0 0 0 / var(--tw-text-opacity));\n}',"",{version:3,sources:["webpack://./src/style.css","<no source>"],names:[],mappings:"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",sourcesContent:["@tailwind base;\r\n@tailwind components;\r\n@tailwind utilities;\r\n\r\nbody {\r\n    background-color: black;\r\n    color: white;\r\n}\r\n\r\n.testing {\r\n    color: white;\r\n}\r\n\r\n.userInputContainer {\r\n    margin: 0 auto;\r\n    justify-content: center;\r\n    grid-column-end: 3;\r\n    column-gap: 10px;\r\n    background-color: rgba(0, 0, 0, 0.5);\r\n    padding: 10px;\r\n}\r\n\r\n\r\n.flexContainer {\r\n    display: flex;\r\n    justify-content: space-evenly;\r\n    /* border: 1px solid green; */\r\n    grid-column-start: 1;\r\n    text-align: center;\r\n    margin-top: 10px;\r\n}\r\n\r\n.dataContainer p {\r\n    padding: 10px;\r\n    /* border: 1px dotted blue; */\r\n    border-radius: 12px;\r\n    background-color: rgba(0, 0, 0, 0.5);\r\n    /* margin-top: 10px; */\r\n}\r\n\r\n.flex2 * {\r\n    flex: 2;\r\n}\r\n\r\n.flex3 * {\r\n    flex: 3;\r\n}\r\n\r\n.flex4 * {\r\n    flex: 4;\r\n}\r\n\r\n.hidden {\r\n    display: none;\r\n}\r\n\r\n.windDataContainer {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-around;\r\n    /* border: 1px solid purple; */\r\n    position: relative;\r\n    width: 100%;\r\n    text-align: center;\r\n    margin: 16px 0;\r\n    background-color: rgba(0, 0, 0, 0.5);\r\n    grid-column-start: 2;\r\n    grid-row-start: 1;\r\n    grid-row-end: 3;\r\n}\r\n\r\n.gridWeather {\r\n    display: grid;\r\n    grid-template-columns: minmax(400px, auto) 25%;\r\n    justify-items: stretch;\r\n    column-gap: 10px;\r\n    /* border: 1px solid pink; */\r\n}\r\n\r\n.dataContainer {\r\n    position: relative;\r\n    padding: 1rem;\r\n}\r\n\r\n.littleLabel {\r\n    background-color: rgba(0, 0, 0);\r\n    border-radius: 5px 5px 0 0;\r\n    position: absolute;\r\n    font-size: 75%;\r\n    left: 5%;\r\n    margin-top: -5px;\r\n    padding: 0 5px;\r\n}\r\n\r\n.loadingWidget{\r\n    position: absolute;\r\n    bottom: 2%;\r\n    right: 5%;\r\n    transform: translate(-50%, -50%);\r\n    z-index: 10;\r\n    width: 32px;\r\n    /* height: 64px; */\r\n    border-radius: 50%;\r\n    background-color: rgba(0, 0, 0, 0.5);\r\n}\r\n\r\n.weatherIcon {\r\n    display: inline-block;\r\n    width: 128px;\r\n    height: 128px;\r\n}\r\n\r\n.weatherIconContainer {\r\n    /* position: absolute; */\r\n    grid-column-start: 2;\r\n    grid-row-start: 3;\r\n    grid-row-end: 5;\r\n    /* border: 1px solid red; */\r\n    background-color: rgba(0, 0, 0, 0.5);\r\n    width: 128px;\r\n    height: 128px;\r\n    margin: 0 auto;\r\n}\r\n\r\n.gridForecast {\r\n    display: grid;\r\n    grid-template-columns: 70% minmax(25px, 30%);\r\n    justify-items: stretch;\r\n    /* column-gap: 10px; */\r\n    border: 1px solid pink;\r\n}\r\n\r\n.forecastWeatherIcon {\r\n    display: inline-block;\r\n    width: 64px;\r\n    height: 64px;\r\n    background-color: white;\r\n    grid-column-end: 2;\r\n\r\n}\r\n\r\n.iconContainer {\r\n    width: 64px;\r\n    height: 64px;\r\n    border: 1px solid red;\r\n    grid-row-start: 2;\r\n    grid-row-end: 4;\r\n    /* margin-right: 5px; */\r\n}\r\n\r\n/* .tempsContainer {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-around;\r\n    padding: 0 10px;\r\n} */\r\n\r\n.forecastDayContainer .forecastTemp {\r\n    grid-column-start: 2;\r\n    padding-left: 5px;\r\n    align-self: center;\r\n}\r\n\r\n.forecastDayContainer .dayLabel {\r\n    grid-column-start: 1;\r\n    grid-column-end: 3;\r\n    padding: 5px;\r\n}",null],sourceRoot:""}]);const i=o},645:n=>{n.exports=function(n){var A=[];return A.toString=function(){return this.map((function(A){var r="",e=void 0!==A[5];return A[4]&&(r+="@supports (".concat(A[4],") {")),A[2]&&(r+="@media ".concat(A[2]," {")),e&&(r+="@layer".concat(A[5].length>0?" ".concat(A[5]):""," {")),r+=n(A),e&&(r+="}"),A[2]&&(r+="}"),A[4]&&(r+="}"),r})).join("")},A.i=function(n,r,e,t,a){"string"==typeof n&&(n=[[null,n,void 0]]);var o={};if(e)for(var i=0;i<this.length;i++){var c=this[i][0];null!=c&&(o[c]=!0)}for(var d=0;d<n.length;d++){var s=[].concat(n[d]);e&&o[s[0]]||(void 0!==a&&(void 0===s[5]||(s[1]="@layer".concat(s[5].length>0?" ".concat(s[5]):""," {").concat(s[1],"}")),s[5]=a),r&&(s[2]?(s[1]="@media ".concat(s[2]," {").concat(s[1],"}"),s[2]=r):s[2]=r),t&&(s[4]?(s[1]="@supports (".concat(s[4],") {").concat(s[1],"}"),s[4]=t):s[4]="".concat(t)),A.push(s))}},A}},537:n=>{n.exports=function(n){var A=n[1],r=n[3];if(!r)return A;if("function"==typeof btoa){var e=btoa(unescape(encodeURIComponent(JSON.stringify(r)))),t="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(e),a="/*# ".concat(t," */"),o=r.sources.map((function(n){return"/*# sourceURL=".concat(r.sourceRoot||"").concat(n," */")}));return[A].concat(o).concat([a]).join("\n")}return[A].join("\n")}},379:n=>{var A=[];function r(n){for(var r=-1,e=0;e<A.length;e++)if(A[e].identifier===n){r=e;break}return r}function e(n,e){for(var a={},o=[],i=0;i<n.length;i++){var c=n[i],d=e.base?c[0]+e.base:c[0],s=a[d]||0,l="".concat(d," ").concat(s);a[d]=s+1;var p=r(l),u={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==p)A[p].references++,A[p].updater(u);else{var m=t(u,e);e.byIndex=i,A.splice(i,0,{identifier:l,updater:m,references:1})}o.push(l)}return o}function t(n,A){var r=A.domAPI(A);return r.update(n),function(A){if(A){if(A.css===n.css&&A.media===n.media&&A.sourceMap===n.sourceMap&&A.supports===n.supports&&A.layer===n.layer)return;r.update(n=A)}else r.remove()}}n.exports=function(n,t){var a=e(n=n||[],t=t||{});return function(n){n=n||[];for(var o=0;o<a.length;o++){var i=r(a[o]);A[i].references--}for(var c=e(n,t),d=0;d<a.length;d++){var s=r(a[d]);0===A[s].references&&(A[s].updater(),A.splice(s,1))}a=c}}},569:n=>{var A={};n.exports=function(n,r){var e=function(n){if(void 0===A[n]){var r=document.querySelector(n);if(window.HTMLIFrameElement&&r instanceof window.HTMLIFrameElement)try{r=r.contentDocument.head}catch(n){r=null}A[n]=r}return A[n]}(n);if(!e)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");e.appendChild(r)}},216:n=>{n.exports=function(n){var A=document.createElement("style");return n.setAttributes(A,n.attributes),n.insert(A,n.options),A}},565:(n,A,r)=>{n.exports=function(n){var A=r.nc;A&&n.setAttribute("nonce",A)}},795:n=>{n.exports=function(n){var A=n.insertStyleElement(n);return{update:function(r){!function(n,A,r){var e="";r.supports&&(e+="@supports (".concat(r.supports,") {")),r.media&&(e+="@media ".concat(r.media," {"));var t=void 0!==r.layer;t&&(e+="@layer".concat(r.layer.length>0?" ".concat(r.layer):""," {")),e+=r.css,t&&(e+="}"),r.media&&(e+="}"),r.supports&&(e+="}");var a=r.sourceMap;a&&"undefined"!=typeof btoa&&(e+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),A.styleTagTransform(e,n,A.options)}(A,n,r)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(A)}}}},589:n=>{n.exports=function(n,A){if(A.styleSheet)A.styleSheet.cssText=n;else{for(;A.firstChild;)A.removeChild(A.firstChild);A.appendChild(document.createTextNode(n))}}}},A={};function r(e){var t=A[e];if(void 0!==t)return t.exports;var a=A[e]={id:e,exports:{}};return n[e](a,a.exports,r),a.exports}r.n=n=>{var A=n&&n.__esModule?()=>n.default:()=>n;return r.d(A,{a:A}),A},r.d=(n,A)=>{for(var e in A)r.o(A,e)&&!r.o(n,e)&&Object.defineProperty(n,e,{enumerable:!0,get:A[e]})},r.o=(n,A)=>Object.prototype.hasOwnProperty.call(n,A),r.nc=void 0,(()=>{function n(n){let A,r=Number(n.slice(0,2)),e=n.slice(3,5),t=n.slice(6,8);return r>13?(r-=12,r=r.toString(),A=r+":"+e+":"+t+"PM",A):r<10?(r=r.toString(),A=r+":"+e+":"+t+"AM",A):r>12&&r<13?(A=n+"PM",A):(A=n+"AM",A)}function A(){document.querySelector("#loadingWidget").remove()}function e(n){const r=document.querySelector("#alertContainer"),e=document.querySelector("#alertMessage");r.classList.contains("hidden")&&(e.textContent=`ERROR(${n.code}): ${n.message}`,r.classList.remove("hidden"),console.warn(`ERROR(${n.code}): ${n.message}`)),A()}let t="95b3fba8515b07e36f4947f16bc32b95";var a=r(379),o=r.n(a),i=r(795),c=r.n(i),d=r(569),s=r.n(d),l=r(565),p=r.n(l),u=r(216),m=r.n(u),b=r(589),g=r.n(b),B=r(933),h={};h.styleTagTransform=g(),h.setAttributes=p(),h.insert=s().bind(null,"head"),h.domAPI=c(),h.insertStyleElement=m(),o()(B.Z,h),B.Z&&B.Z.locals&&B.Z.locals;var w=r(576),E={};let f,C,y,k,v;E.styleTagTransform=g(),E.setAttributes=p(),E.insert=s().bind(null,"head"),E.domAPI=c(),E.insertStyleElement=m(),o()(w.Z,E),w.Z&&w.Z.locals&&w.Z.locals;const x=document.querySelector("#inputPostalCode"),I=document.querySelector("#btnLocalWeather");async function S(){if(y=x.value,x.value="",""!==y){!function(){const n=document.querySelector(".fieldset"),A=document.createElement("img");A.id="loadingWidget",A.classList.add("loadingWidget"),A.src="https://media1.giphy.com/media/3o7bu3XilJ5BOiSGic/giphy.gif?cid=bbfc1e49mgk3jbxodjq4l678y0yz8re86kwacdzkm947vdwv&rid=giphy.gif&ct=g",n.appendChild(A)}(),await async function(){let n=await async function(n,A,r){try{n=n||"93301",r=r||"imperial",A=A||"US";let e=await fetch(`https://api.openweathermap.org/geo/1.0/zip?zip=${n},${A}&appid=${t}`,{mode:"cors"});if(404===e.status)throw new Object({code:422,message:"Invalid Postal Code"});return await e.json()}catch(n){e(n)}}(y);v=function(n){if("string"!=typeof n)return void console.log("Must pass the zipcode as a string.");if(5!==n.length)return void e({code:422,message:"Must pass a 5-digit zipcode."});const A=parseInt(n,10);let r,t;return A>=35e3&&A<=36999?(r="AL",t="Alabama"):A>=99500&&A<=99999?(r="AK",t="Alaska"):A>=85e3&&A<=86999?(r="AZ",t="Arizona"):A>=71600&&A<=72999?(r="AR",t="Arkansas"):A>=9e4&&A<=96699?(r="CA",t="California"):A>=8e4&&A<=81999?(r="CO",t="Colorado"):A>=6e3&&A<=6389||A>=6391&&A<=6999?(r="CT",t="Connecticut"):A>=19700&&A<=19999?(r="DE",t="Delaware"):A>=32e3&&A<=34999?(r="FL",t="Florida"):A>=3e4&&A<=31999||A>=39800&&A<=39999?(r="GA",t="Georgia"):A>=96700&&A<=96999?(r="HI",t="Hawaii"):A>=83200&&A<=83999?(r="ID",t="Idaho"):A>=6e4&&A<=62999?(r="IL",t="Illinois"):A>=46e3&&A<=47999?(r="IN",t="Indiana"):A>=5e4&&A<=52999?(r="IA",t="Iowa"):A>=66e3&&A<=67999?(r="KS",t="Kansas"):A>=4e4&&A<=42999?(r="KY",t="Kentucky"):A>=7e4&&A<=71599?(r="LA",t="Louisiana"):A>=3900&&A<=4999?(r="ME",t="Maine"):A>=20600&&A<=21999?(r="MD",t="Maryland"):A>=1e3&&A<=2799||5501==A||5544==A?(r="MA",t="Massachusetts"):A>=48e3&&A<=49999?(r="MI",t="Michigan"):A>=55e3&&A<=56899?(r="MN",t="Minnesota"):A>=38600&&A<=39999?(r="MS",t="Mississippi"):A>=63e3&&A<=65999?(r="MO",t="Missouri"):A>=59e3&&A<=59999?(r="MT",t="Montana"):A>=27e3&&A<=28999?(r="NC",t="North Carolina"):A>=58e3&&A<=58999?(r="ND",t="North Dakota"):A>=68e3&&A<=69999?(r="NE",t="Nebraska"):A>=88900&&A<=89999?(r="NV",t="Nevada"):A>=3e3&&A<=3899?(r="NH",t="New Hampshire"):A>=7e3&&A<=8999?(r="NJ",t="New Jersey"):A>=87e3&&A<=88499?(r="NM",t="New Mexico"):A>=1e4&&A<=14999||6390==A||501==A||544==A?(r="NY",t="New York"):A>=43e3&&A<=45999?(r="OH",t="Ohio"):A>=73e3&&A<=73199||A>=73400&&A<=74999?(r="OK",t="Oklahoma"):A>=97e3&&A<=97999?(r="OR",t="Oregon"):A>=15e3&&A<=19699?(r="PA",t="Pennsylvania"):A>=300&&A<=999?(r="PR",t="Puerto Rico"):A>=2800&&A<=2999?(r="RI",t="Rhode Island"):A>=29e3&&A<=29999?(r="SC",t="South Carolina"):A>=57e3&&A<=57999?(r="SD",t="South Dakota"):A>=37e3&&A<=38599?(r="TN",t="Tennessee"):A>=75e3&&A<=79999||A>=73301&&A<=73399||A>=88500&&A<=88599?(r="TX",t="Texas"):A>=84e3&&A<=84999?(r="UT",t="Utah"):A>=5e3&&A<=5999?(r="VT",t="Vermont"):A>=20100&&A<=20199||A>=22e3&&A<=24699||20598==A?(r="VA",t="Virginia"):A>=2e4&&A<=20099||A>=20200&&A<=20599||A>=56900&&A<=56999?(r="DC",t="Washington DC"):A>=98e3&&A<=99499?(r="WA",t="Washington"):A>=24700&&A<=26999?(r="WV",t="West Virginia"):A>=53e3&&A<=54999?(r="WI",t="Wisconsin"):A>=82e3&&A<=83199?(r="WY",t="Wyoming"):(r="none",t="none",console.error("No state found matching",A)),r}(y),k=n.name,f=n.lat,C=n.lon}();let c=await async function(n,A,r){try{r=r||"imperial";let e=await fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${n}&lon=${A}&units=${r}&appid=${t}`,{mode:"cors"});return await e.json()}catch(n){e(n)}}(f,C),d=(await async function(n,A,r){try{r=r||"imperial";let e=await fetch(`https://api.openweathermap.org/data/2.5/forecast?lat=${n}&lon=${A}&units=${r}&appid=${t}`,{mode:"cors"});return await e.json()}catch(n){e(n)}}(f,C),await async function(n,A){try{n+=" weather",new Date,A>90&&(console.log("Extreme Hot"),n="Hot as hell! Weather"),A<32&&(console.log("Extreme Cold!"),n="Ice Tundra ");let r=await fetch("https://api.giphy.com/v1/gifs/translate?api_key=0JvtDfunbRZAukBB5R94oBnUtDprGS0i&s="+n,{mode:"cors"});return(await r.json()).data.images.original.url}catch(n){e(n)}}(c.weather[0].description,c.main.temp));!function(n){let A=n.data.tempCurrent,r=n.data.description,e=n.data.icon,t=n.data.tempHigh,a=n.data.tempLow,o=n.data.tempFeels,i=n.data.cloudsPercent,c=n.data.pressure,d=n.data.humidity,s=n.data.visibility,l=n.data.sunRise,p=n.data.sunSet,u=(n.data.location,n.data.dateTime),m=n.data.windSpeed,b=n.data.windDirection;if("0mm"!==n.data.rain1h){let A=n.data.rain1h;if(document.querySelector("#rain1HText").textContent=A,"0mm"!==n.data.rain3h){let A=n.data.rain3h;document.querySelector("#rain3HText").textContent=A}}if("0mm"!==n.data.snow1h){let A=n.data.snow1h;if(document.querySelector("#snow1HText").textContent=A,"0mm"!==n.data.snow3h){let A=n.data.snow3h;document.querySelector("#snow3HText").textContent=A}}const g=document.querySelector(".fieldset");g.style.background=`black url(${n.weatherGif}) no-repeat center`,g.style.backgroundSize="cover",document.querySelector("#tempCurrentText").textContent=A,document.querySelector("#weatherDescriptionText").textContent=r;const B=document.querySelector(".weatherIcon");B.style.background=`url(https://openweathermap.org/img/wn/${e}@2x.png)`,B.style.backgroundSize="cover",document.querySelector("#tempHighText").textContent=t,document.querySelector("#tempLowText").textContent=a,document.querySelector("#tempFeelsText").textContent=o,document.querySelector("#windSpeedText").textContent=m,document.querySelector("#windDirectionText").textContent=b,document.querySelector("#cloudsPercentText").textContent=i,document.querySelector("#pressureText").textContent=c,document.querySelector("#humidityText").textContent=d,document.querySelector("#visibilityText").textContent=s,document.querySelector("#sunriseText").textContent=l,document.querySelector("#sunsetText").textContent=p,document.querySelector("#locationText").textContent=`${n.cityName}, ${n.stateName}`,document.querySelector("#timeText").textContent=u}({data:(r=c,{tempCurrent:Math.round(r.main.temp)+"F°",tempFeels:Math.round(r.main.feels_like)+"F°",tempHigh:Math.round(r.main.temp_max)+"F°",tempLow:Math.round(r.main.temp_min)+"F°",humidity:r.main.humidity+"%",pressure:(i=r.main.pressure,.029529983071445*i).toFixed(2),cloudsPercent:r.clouds.all+"%",description:r.weather[0].description,icon:r.weather[0].icon,windSpeed:(o=r.wind.speed,2.23694*o).toFixed(2)+"mph",windDirection:(a=r.wind.deg,a>348.75||a<11.25?"N":a>11.25||a<33.75?"NNE":a>33.75||a<56.25?"NE":a>56.25||a<78.75?"ENE":a>78.75||a<101.25?"E":a>101.25||a<123.75?"ESE":a>123.75||a<146.25?"SE":a>146.25||a<168.75?"SSE":a>168.75||a<191.25?"S":a>191.25||a<213.75?"SSW":a>213.75||a<236.25?"SW":a>236.25||a<258.75?"WSW":eg>258.75||a<281.25?"W":a>281.25||a<303.75?"WNW":eg>303.75||a<326.25?"NW":a>326.25||a<348.75?"NNW":void 0),dateTime:n(new Date(1e3*r.dt).toTimeString().slice(0,8)),sunRise:n(new Date(1e3*r.sys.sunrise).toTimeString().slice(0,8)),sunSet:n(new Date(1e3*r.sys.sunset).toTimeString().slice(0,8)),visibility:.001*r.visibility+"km",rain1h:void 0!==r.rain?r.rain["1h"]+"mm":"0mm",rain3h:void 0!==r.rain?r.rain["3h"]+"mm":"0mm",snow1h:void 0!==r.snow?r.snow["1h"]+"mm":"0mm",snow3h:void 0!==r.snow?r.snow["3h"]+"mm":"0mm",location:r.name}),cityName:k,stateName:v,weatherGif:d}),A()}else e({code:425,message:"You have not entered a Postal Code."});var r,a,o,i}x.value="93301",S(),I.addEventListener("click",S),x.addEventListener("keyup",(n=>{"Enter"===n.key&&S()})),document.querySelector("#btnCloseAlert").addEventListener("click",(()=>{alertContainer.classList.add("hidden")}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,